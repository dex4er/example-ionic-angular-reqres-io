name: CI

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            .apt/cache
            .apt/state
          key: ${{ runner.os }}-apt
      - run: ./.apt/get.sh update
      - run: ./.apt/get.sh install --download-only google-chrome-stable
      - run: sudo ./.apt/get.sh install google-chrome-stable

      - uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
          cache: npm
      - run: npm ci

      - uses: trunk-io/trunk-action@v1
        with:
          check-mode: all

      - run: npm run test:ci

  build:
    runs-on: ubuntu-22.04

    needs: test

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
          cache: npm
      - run: npm ci

      - run: npm run build:prod

      - uses: actions/upload-artifact@v3
        with:
          name: www
          path: |
            www

  pack:
    runs-on: ubuntu-22.04

    needs: build

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: www
          path: www

      - run: docker login "ghcr.io" -u "${GITHUB_ACTOR}" --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"

      - run: docker run
          -v ${GITHUB_WORKSPACE}:/workspace
          -v ${HOME}/.docker:/kaniko/.docker
          gcr.io/kaniko-project/executor:v1.8.1-debug
          --dockerfile=/workspace/docker/Dockerfile
          --context=dir:///workspace/
          --destination=ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME//\//-}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}
          --tarPath=docker/image.tar
          --single-snapshot
          --skip-unused-stages
          --snapshotMode=redo
          --use-new-run

      - run: docker load -i docker/image.tar
      - run: docker run -d -p 8080:80 ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME//\//-}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}
      - run: |
          while true; do
            for i in $(seq 1 30); do
              timeout 1 nc -z localhost 8080 || exit 1
              curl --silent --fail --show-error --max-time 5 http://localhost:8080/ && break 2
              sleep 5
            done
            exit 1
          done
